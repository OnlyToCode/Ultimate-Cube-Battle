{
  "requesterUsername": "OnlyToCode",
  "requesterAvatarIconUri": {
    "$mid": 1,
    "path": "/u/188051009",
    "scheme": "https",
    "authority": "avatars.githubusercontent.com",
    "query": "v=4"
  },
  "responderUsername": "GitHub Copilot",
  "responderAvatarIconUri": {
    "id": "copilot"
  },
  "initialLocation": "editing-session",
  "requests": [
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 114
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 115
            },
            "text": "es necesario al llamar a plataforma para crear, espesificar \"tipo='suelo'\" o solo con poner 'suelo' es suficinete?",
            "kind": "text"
          }
        ],
        "text": "es necesario al llamar a plataforma para crear, espesificar \"tipo='suelo'\" o solo con poner 'suelo' es suficinete?"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "### [Main.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/Main.py)\n\nYou can modify the `Plataforma` class to accept positional arguments for `tipo`, `alto`, `ancho`, `posicion_X`, and `posicion_Y`. This way, you can create a `Plataforma` instance without specifying the keyword `tipo`.\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          }
        },
        {
          "value": "# ...existing code...\n\nclass Plataforma:\n    def __init__(self, tipo='default', alto=0, ancho=0, posicion_X=0, posicion_Y=0):\n        self.tipo = tipo\n        self.alto = alto\n        self.ancho = ancho\n        self.posicion_X = posicion_X\n        self.posicion_Y = posicion_Y\n\n    # ...existing code...\n\ndef juego(pantalla=Pantalla, jugador=Personaje):\n    # ...existing code...\n    plataforma = Plataforma('suelo', 10, 100, 50, mitad_Y)\n    # ...existing code...\n```",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Constantes de colores",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ROJO = (255, 0, 0)",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "NEGRO = (0, 0, 0)",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "BLANCO = (255, 255, 255)",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "AZUL = (0, 0, 255)  # Añadir constante de color para la línea",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar el personaje",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Personaje:",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    tamaño = 30  # Tamaño del cuadrado",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_maxima = 5",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    salto = False",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    cavar = False",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    gravedad = 13",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    freno = 10",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    aceleracion = 20",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_x = 0",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_y = 0",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, x, y):",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos = [x, y]",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def set_gravedad(self, valor):",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.gravedad = valor",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_gravedad(self):",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return self.gravedad",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def accion_gravedad(self, piso):",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not(self.pos[1] >= piso-self.tamaño):",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.salto = False",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.gravedad",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if not self.salto:",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.salto = True",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.cavar = True",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y = 0",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.pos[1] = piso-self.tamaño",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            else:",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] >= piso:",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_y -= 20+(self.pos[1]-piso)*2",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] > piso:",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.cavar = False",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def mover(self, teclas, delta_time, mitad_Y):",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.accion_gravedad(mitad_Y)",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.frenar(teclas)",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_x = int(self.velocidad_x * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_y = int(self.velocidad_y * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_LEFT] and self.velocidad_maxima*-1 <= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x -= self.aceleracion",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_RIGHT] and self.velocidad_maxima >= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x += self.aceleracion",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_UP] and self.velocidad_maxima*-1 <= velocidad_escalada_y and self.salto:",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y -= self.aceleracion*20",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_DOWN] and self.velocidad_maxima >= velocidad_escalada_y and self.cavar:",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.aceleracion*20",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[0] += velocidad_escalada_x",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[1] += velocidad_escalada_y",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def frenar(self, teclas):",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_LEFT] and not teclas[pygame.K_RIGHT] and self.velocidad_x != 0:",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno/10",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10                ",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno/10",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x -= int(self.freno/10)",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x += int(self.freno/10)",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_UP] and not teclas[pygame.K_DOWN] and self.velocidad_y != 0:",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/1.5)",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno)",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/4)",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno/4)",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, ROJO, (int(self.pos[0]), int(self.pos[1]), self.tamaño, self.tamaño))",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar cada pantalla",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Pantalla:",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, ancho, alto, titulo=\"Pantalla\"):",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = ancho",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = alto",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.set_caption(titulo)",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Obtener el tamaño de la pantalla",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        info_pantalla = pygame.display.Info()",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho_total = info_pantalla.current_w",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto_total = info_pantalla.current_h",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_Y = int(self.alto_total/2)",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_X = int(self.ancho_total/2)",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Superficie de visualización en modo pantalla completa",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface = pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN)",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_datos_pantalla(self, *args):",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        datos = {",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho\": self.ancho,",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto\": self.alto,",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho_total\": self.ancho_total,",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto_total\": self.alto_total,",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_X\": self.mitad_X,",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_Y\": self.mitad_Y",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return [datos[arg] for arg in args if arg in datos]",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_juego(self, personaje):",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.fill(NEGRO)",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        personaje.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Dibujar una línea azul desde (100, 100) hasta (700, 500) con un grosor de 5 píxeles",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.line(self.display_surface, AZUL, (0, self.mitad_Y), (self.ancho_total, self.mitad_Y), 5)",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_menu(self):",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Crear una superficie con transparencia",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay = pygame.Surface((self.ancho_total, self.alto_total), pygame.SRCALPHA)",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay.fill((190, 190, 190, 1))  # Rellenar con negro y 50% de transparencia (128 en el canal alfa)",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.blit(overlay, (0, 0))",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar Plataformas",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Plataforma:",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, tipo='default', alto=0, ancho=0, posicion_X=0, posicion_Y=0):",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.tipo = tipo",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = alto",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = ancho",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_X = posicion_X",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_Y = posicion_Y",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, BLANCO, (self.posicion_X, self.posicion_Y, self.ancho, self.alto))",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def juego(pantalla=Pantalla, jugador=Personaje):",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    clock = pygame.time.Clock()",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    mitad_Y = pantalla.get_datos_pantalla(\"mitad_Y\")[0]",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    plataforma = Plataforma('suelo', 10, 100, 50, mitad_Y)",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        delta_time = clock.tick(60) / 1000.0  # Delta time en segundos",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        jugador.mover(teclas, delta_time, mitad_Y)",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_juego(jugador)",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def menu(pantalla):",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_menu()",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elif teclas[pygame.K_BACKSPACE]:",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return True",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def main():",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Inicializar Pygame",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.init()",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Configuración inicial",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    jugador = Personaje(400, 300)",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Variables de control",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    bucle_principal = True",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Bucle principal",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while bucle_principal:",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        is_end = juego(pantalla_principal, jugador)",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end==False:",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            is_end = menu(pantalla_principal)",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end==True:",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            bucle_principal=False",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.quit()",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "if __name__ == \"__main__\":",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    main()",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 1714,
          "totalElapsed": 12819
        },
        "metadata": {
          "applyEditsId": "3203d07e-9125-46a3-82bc-78a03efc5d82",
          "modelMessageId": "0e52e782-fae4-45a8-8c87-a05f5687f695",
          "responseId": "4e877c98-a0d3-4b85-b97e-a91032d31155",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 33
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 34
            },
            "text": "en español, es o no es necesario?",
            "kind": "text"
          }
        ],
        "text": "en español, es o no es necesario?"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "No es necesario especificar \"tipo='suelo'\" al crear una instancia de `Plataforma`. Puedes simplemente pasar 'suelo' como primer argumento posicional.",
          "supportThemeIcons": false,
          "supportHtml": false
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 879,
          "totalElapsed": 1239
        },
        "metadata": {
          "applyEditsId": "b283ca60-9487-47f3-a0ea-f79b490a232d",
          "modelMessageId": "942091c3-d355-489b-8923-34311d357e03",
          "responseId": "28b287a5-55c4-497e-90a8-45350759243f",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 85
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 86
            },
            "text": "si no especifico el .get() del dicionario, pues el segundo argumento que me devuelve?",
            "kind": "text"
          }
        ],
        "text": "si no especifico el .get() del dicionario, pues el segundo argumento que me devuelve?"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Si no especificas el método `.get()` del diccionario y accedes a una clave que no existe, obtendrás un `KeyError`. El método `.get()` permite proporcionar un valor predeterminado que se devuelve si la clave no se encuentra en el diccionario. Si no se proporciona un segundo argumento, el valor predeterminado es `None`.\n\nPor ejemplo:\n```python\nmi_diccionario = {'a': 1, 'b': 2}\n\n# Usando .get() con un valor predeterminado\nvalor = mi_diccionario.get('c', 'valor predeterminado')  # Devuelve 'valor predeterminado'\n\n# Usando .get() sin un valor predeterminado\nvalor = mi_diccionario.get('c')  # Devuelve None\n\n# Accediendo directamente sin .get()\nvalor = mi_diccionario['c']  # Lanza un KeyError\n```",
          "supportThemeIcons": false,
          "supportHtml": false
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 1418,
          "totalElapsed": 3138
        },
        "metadata": {
          "applyEditsId": "3183c11a-8c23-4246-9640-293570c63e53",
          "modelMessageId": "5772069b-58f1-4c9b-9e02-d937b3ffc936",
          "responseId": "08c9aee9-f4ee-4620-8da8-010ad45cd8bf",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 74
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 75
            },
            "text": "como puedo saber el numero de pantallas y legir una para pantalla completa",
            "kind": "text"
          }
        ],
        "text": "como puedo saber el numero de pantallas y legir una para pantalla completa"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Para obtener el número de pantallas disponibles y seleccionar una para pantalla completa en Pygame, puedes usar la biblioteca `pygame.display`. Aquí te muestro cómo hacerlo:\n\n### [Main.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/Main.py)\n\nAñadir funciones para obtener el número de pantallas y seleccionar una para pantalla completa.\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\n\n# ...existing code...\n\ndef obtener_numero_pantallas():\n    return pygame.display.get_num_displays()\n\ndef seleccionar_pantalla(pantalla_index):\n    if pantalla_index < 0 or pantalla_index >= obtener_numero_pantallas():\n        raise ValueError(\"Índice de pantalla fuera de rango\")\n    pygame.display.set_mode((0, 0), pygame.FULLSCREEN, display=pygame.display.get_window_id(pantalla_index))\n\ndef main():\n    # Inicializar Pygame\n    pygame.init()\n    \n    # Obtener el número de pantallas\n    num_pantallas = obtener_numero_pantallas()\n    print(f\"Número de pantallas disponibles: {num_pantallas}\")\n    \n    # Seleccionar una pantalla para pantalla completa\n    pantalla_index = 0  # Cambia este valor para seleccionar una pantalla diferente\n    seleccionar_pantalla(pantalla_index)\n    \n    # Configuración inicial\n    jugador = Personaje(400, 300)\n    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")\n    \n    # Variables de control\n    bucle_principal = True\n\n    # Bucle principal\n    while bucle_principal:\n        is_end = juego(pantalla_principal, jugador)\n        if is_end == False:\n            is_end = menu(pantalla_principal)\n\n        if is_end == True:\n            bucle_principal = False\n\n    pygame.quit()\n\nif __name__ == \"__main__\":\n    main()\n```\n\nCon estas funciones, puedes obtener el número de pantallas disponibles y seleccionar una para pantalla completa. Asegúrate de cambiar el valor de `pantalla_index` para seleccionar la pantalla deseada.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Constantes de colores",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ROJO = (255, 0, 0)",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "NEGRO = (0, 0, 0)",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "BLANCO = (255, 255, 255)",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "AZUL = (0, 0, 255)  # Añadir constante de color para la línea",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar el personaje",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Personaje:",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    tamaño = 30  # Tamaño del cuadrado",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_maxima = 5",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    salto = False",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    cavar = False",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    gravedad = 13",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    freno = 10",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    aceleracion = 20",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_x = 0",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_y = 0",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, x, y):",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos = [x, y]",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def set_gravedad(self, valor):",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.gravedad = valor",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_gravedad(self):",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return self.gravedad",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def accion_gravedad(self, piso):",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not(self.pos[1] >= piso-self.tamaño):",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.salto = False",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.gravedad",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if not self.salto:",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.salto = True",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.cavar = True",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y = 0",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.pos[1] = piso-self.tamaño",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            else:",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] >= piso:",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_y -= 20+(self.pos[1]-piso)*2",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] > piso:",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.cavar = False",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def mover(self, teclas, delta_time, mitad_Y):",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.accion_gravedad(mitad_Y)",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.frenar(teclas)",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_x = int(self.velocidad_x * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_y = int(self.velocidad_y * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_LEFT] and self.velocidad_maxima*-1 <= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x -= self.aceleracion",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_RIGHT] and self.velocidad_maxima >= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x += self.aceleracion",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_UP] and self.velocidad_maxima*-1 <= velocidad_escalada_y and self.salto:",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y -= self.aceleracion*20",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_DOWN] and self.velocidad_maxima >= velocidad_escalada_y and self.cavar:",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.aceleracion*20",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[0] += velocidad_escalada_x",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[1] += velocidad_escalada_y",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def frenar(self, teclas):",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_LEFT] and not teclas[pygame.K_RIGHT] and self.velocidad_x != 0:",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno/10",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10                ",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno/10",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x -= int(self.freno/10)",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x += int(self.freno/10)",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_UP] and not teclas[pygame.K_DOWN] and self.velocidad_y != 0:",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/1.5)",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno)",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/4)",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno/4)",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, ROJO, (int(self.pos[0]), int(self.pos[1]), self.tamaño, self.tamaño))",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar cada pantalla",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Pantalla:",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, ancho, alto, titulo=\"Pantalla\"):",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = ancho",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = alto",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.set_caption(titulo)",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Obtener el tamaño de la pantalla",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        info_pantalla = pygame.display.Info()",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        print(info_pantalla)",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho_total = info_pantalla.current_w",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto_total = info_pantalla.current_h",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_Y = int(self.alto_total/2)",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_X = int(self.ancho_total/2)",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Superficie de visualización en modo pantalla completa",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface = pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN)",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_datos_pantalla(self, *args):",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        datos = {",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho\": self.ancho,",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto\": self.alto,",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho_total\": self.ancho_total,",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto_total\": self.alto_total,",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_X\": self.mitad_X,",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_Y\": self.mitad_Y",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return [datos[arg] for arg in args if arg in datos]",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_juego(self, **kwargs):",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.fill(NEGRO)",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        personaje = kwargs.get('personaje', False)",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if personaje:",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            personaje.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plataforma = kwargs.get('plataforma', False)",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if plataforma:",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            plataforma.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Dibujar una línea azul desde (100, 100) hasta (700, 500) con un grosor de 5 píxeles",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.line(self.display_surface, AZUL, (0, self.mitad_Y), (self.ancho_total, self.mitad_Y), 5)",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_menu(self):",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Crear una superficie con transparencia",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay = pygame.Surface((self.ancho_total, self.alto_total), pygame.SRCALPHA)",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay.fill((190, 190, 190, 1))  # Rellenar con negro y 50% de transparencia (128 en el canal alfa)",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.blit(overlay, (0, 0))",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar Plataformas",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Plataforma:",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, **kwargs):",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.tipo = kwargs.get('tipo', 'default')",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = kwargs.get('alto', 0)",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = kwargs.get('ancho', 0)",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_X = kwargs.get('posicion_X', 0)",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_Y = kwargs.get('posicion_Y', 0)",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, BLANCO, (self.posicion_X, self.posicion_Y, self.ancho, self.alto))",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def juego(pantalla=Pantalla, jugador=Personaje):",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    clock = pygame.time.Clock()",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    mitad_Y = pantalla.get_datos_pantalla(\"mitad_Y\")[0]",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    plataforma = Plataforma(tipo='suelo', alto=10, ancho=100, posicion_X=200, posicion_Y=mitad_Y-100)",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        delta_time = clock.tick(60) / 1000.0  # Delta time en segundos",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        jugador.mover(teclas, delta_time, mitad_Y)",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_juego(personaje=jugador, plataforma=plataforma)",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def menu(pantalla):",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_menu()",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elif teclas[pygame.K_BACKSPACE]:",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return True",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def obtener_numero_pantallas():",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return pygame.display.get_num_displays()",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def seleccionar_pantalla(pantalla_index):",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if pantalla_index < 0 or pantalla_index >= obtener_numero_pantallas():",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        raise ValueError(\"Índice de pantalla fuera de rango\")",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.display.set_mode((0, 0), pygame.FULLSCREEN, display=pygame.display.get_window_id(pantalla_index))",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def main():",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Inicializar Pygame",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.init()",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Obtener el número de pantallas",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    num_pantallas = obtener_numero_pantallas()",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Número de pantallas disponibles: {num_pantallas}\")",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Seleccionar una pantalla para pantalla completa",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla_index = 0  # Cambia este valor para seleccionar una pantalla diferente",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    seleccionar_pantalla(pantalla_index)",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Configuración inicial",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    jugador = Personaje(400, 300)",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Variables de control",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    bucle_principal = True",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    # Bucle principal",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1073741825,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    while bucle_principal:",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1073741825,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n        is_end = juego(pantalla_principal, jugador)",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1073741825,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n        if is_end==False:",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1073741825,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n            is_end = menu(pantalla_principal)",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1073741825,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1073741825,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n        if is_end==True:",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1073741825,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n            bucle_principal=False",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1073741825,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1073741825,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1073741825,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    ",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1073741825,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    pygame.quit()",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1073741825,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1073741825,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nif __name__ == \"__main__\":",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1073741825,
                  "endLineNumber": 241,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    main()",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1073741825,
                  "endLineNumber": 242,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1073741825,
                  "endLineNumber": 243,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1073741825,
                  "endLineNumber": 244,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 1735,
          "totalElapsed": 21284
        },
        "metadata": {
          "applyEditsId": "ab6b78b6-778b-4834-98ec-e3628502e077",
          "modelMessageId": "a996d2be-8c91-4f7c-a1e3-194f8e4f6b56",
          "responseId": "b5b7b64e-0b7a-427c-b1ac-d07efa4a6891",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 140
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 141
            },
            "text": "dime todo lo que sepas de pygame.display.Info(), quiero saber por que no me da el la info de mi pantalla secundaria (la pantalla es viejita)",
            "kind": "text"
          }
        ],
        "text": "dime todo lo que sepas de pygame.display.Info(), quiero saber por que no me da el la info de mi pantalla secundaria (la pantalla es viejita)"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "`pygame.display.Info()` devuelve un objeto con información sobre la pantalla actual en la que se está ejecutando la ventana de Pygame. Este objeto contiene varios atributos que describen las características de la pantalla, como el ancho, el alto, la profundidad de color, etc.\n\nAquí están los atributos más comunes del objeto devuelto por `pygame.display.Info()`:\n\n- `current_w`: El ancho actual de la pantalla en píxeles.\n- `current_h`: La altura actual de la pantalla en píxeles.\n- `hw`: Indica si la pantalla tiene aceleración de hardware.\n- `wm`: Indica si la pantalla tiene un modo de ventana.\n- `video_mem`: La cantidad de memoria de video disponible (puede no estar disponible en todas las plataformas).\n\nEjemplo de uso:\n```python\nimport pygame\n\npygame.init()\ninfo_pantalla = pygame.display.Info()\nprint(f\"Ancho: {info_pantalla.current_w}\")\nprint(f\"Alto: {info_pantalla.current_h}\")\nprint(f\"Aceleración de hardware: {info_pantalla.hw}\")\nprint(f\"Modo ventana: {info_pantalla.wm}\")\nprint(f\"Memoria de video: {info_pantalla.video_mem}\")\npygame.quit()\n```\n\n### Razones por las que no obtienes información de tu pantalla secundaria:\n\n1. **Compatibilidad del Hardware**: Si la pantalla secundaria es muy antigua, puede que no sea completamente compatible con las funciones de detección de hardware de Pygame o del sistema operativo.\n\n2. **Configuración del Sistema Operativo**: Asegúrate de que tu sistema operativo reconoce correctamente la pantalla secundaria. Si el sistema operativo no la reconoce correctamente, Pygame tampoco podrá hacerlo.\n\n3. **Limitaciones de Pygame**: Pygame puede tener limitaciones en la detección de múltiples pantallas dependiendo de la plataforma y la versión de Pygame que estés utilizando.\n\n4. **Controladores de Video**: Asegúrate de que los controladores de video de tu sistema están actualizados y son compatibles con la pantalla secundaria.\n\n### Solución Alternativa\n\nSi necesitas trabajar con múltiples pantallas, podrías considerar usar bibliotecas más avanzadas como `pygame._sdl2.video` (si está disponible en tu versión de Pygame) o incluso otras bibliotecas como `PyOpenGL` o `PyQt` que tienen mejor soporte para configuraciones de múltiples pantallas.\n\nEjemplo usando `pygame._sdl2.video`:\n```python\nimport pygame\nimport pygame._sdl2.video as sdl2_video\n\npygame.init()\ndisplays = sdl2_video.get_num_video_displays()\nprint(f\"Número de pantallas: {displays}\")\n\nfor i in range(displays):\n    display_mode = sdl2_video.get_display_mode(i)\n    print(f\"Pantalla {i}: {display_mode.w}x{display_mode.h}\")\n\npygame.quit()\n```\n\nEste código te dará información sobre todas las pantallas disponibles en tu sistema.",
          "supportThemeIcons": false,
          "supportHtml": false
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 1831,
          "totalElapsed": 8017
        },
        "metadata": {
          "applyEditsId": "529b6e5d-1aa1-49c9-ae94-8984baf891ae",
          "modelMessageId": "3d3b777c-9125-46c2-ba39-58757540f106",
          "responseId": "9c385b84-a2e6-4e86-8914-1f4fd54a1519",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 131
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 2,
              "endColumn": 86
            },
            "text": "me salio error al ejecutarlo en pruebas dice\r\nAttributeError: module 'pygame._sdl2.video' has no attribute 'get_num_video_displays'",
            "kind": "text"
          }
        ],
        "text": "me salio error al ejecutarlo en pruebas dice\r\nAttributeError: module 'pygame._sdl2.video' has no attribute 'get_num_video_displays'"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Parece que `pygame._sdl2.video` no tiene el método `get_num_video_displays`. En su lugar, puedes usar `pygame.display.get_num_displays()` para obtener el número de pantallas disponibles. Aquí tienes el código corregido:\n\n### [pruebas.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/pruebas.py)\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\n\npygame.init()\ndisplays = pygame.display.get_num_displays()\nprint(f\"Número de pantallas: {displays}\")\n\nfor i in range(displays):\n    display_mode = pygame.display.get_desktop_display_mode(i)\n    print(f\"Pantalla {i}: {display_mode.w}x{display_mode.h}\")\n\npygame.quit()\n```\n\n### [Main.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/Main.py)\n\nAsegúrate de usar `pygame.display.get_num_displays()` en lugar de `pygame._sdl2.video.get_num_video_displays()`.\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\n\n# ...existing code...\n\nclass Pantalla:\n    # ...existing code...\n\n    def seleccionar_pantalla(self, pantalla_index):\n        id_pantalla = pygame.display.get_num_displays()\n        if pantalla_index < 0 or pantalla_index >= id_pantalla:\n            raise ValueError(\"Índice de pantalla fuera de rango\")\n        return pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN, display=pantalla_index)\n\n    # ...existing code...\n\ndef main():\n    # Inicializar Pygame\n    pygame.init()\n    \n    # Obtener el número de pantallas\n    num_pantallas = pygame.display.get_num_displays()\n    print(f\"Número de pantallas disponibles: {num_pantallas}\")\n    \n    # Configuración inicial\n    jugador = Personaje(400, 300)\n    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")\n    \n    # Variables de control\n    bucle_principal = True\n\n    # Bucle principal\n    while bucle_principal:\n        is_end = juego(pantalla_principal, jugador)\n        if is_end == False:\n            is_end = menu(pantalla_principal)\n\n        if is_end == True:\n            bucle_principal = False\n\n    pygame.quit()\n\nif __name__ == \"__main__\":\n    main()\n```\n\nCon estas correcciones, deberías poder obtener el número de pantallas disponibles y seleccionar una para pantalla completa sin errores.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.init()",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "displays = pygame.display.get_num_displays()",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "print(f\"Número de pantallas: {displays}\")",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "for i in range(displays):",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    display_mode = pygame.display.get_desktop_display_mode(i)",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Pantalla {i}: {display_mode.w}x{display_mode.h}\")",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.quit()",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 14,
                  "endLineNumber": 13,
                  "endColumn": 1
                }
              }
            ]
          ]
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Constantes de colores",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ROJO = (255, 0, 0)",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "NEGRO = (0, 0, 0)",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "BLANCO = (255, 255, 255)",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "AZUL = (0, 0, 255)  # Añadir constante de color para la línea",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar el personaje",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Personaje:",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    tamaño = 30  # Tamaño del cuadrado",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_maxima = 5",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    salto = False",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    cavar = False",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    gravedad = 13",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    freno = 10",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    aceleracion = 20",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_x = 0",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_y = 0",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, x, y):",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos = [x, y]",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def set_gravedad(self, valor):",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.gravedad = valor",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_gravedad(self):",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return self.gravedad",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def accion_gravedad(self, piso):",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not(self.pos[1] >= piso-self.tamaño):",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.salto = False",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.gravedad",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if not self.salto:",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.salto = True",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.cavar = True",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y = 0",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.pos[1] = piso-self.tamaño",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            else:",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] >= piso:",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_y -= 20+(self.pos[1]-piso)*2",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] > piso:",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.cavar = False",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def mover(self, teclas, delta_time, mitad_Y):",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.accion_gravedad(mitad_Y)",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.frenar(teclas)",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_x = int(self.velocidad_x * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_y = int(self.velocidad_y * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_LEFT] and self.velocidad_maxima*-1 <= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x -= self.aceleracion",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_RIGHT] and self.velocidad_maxima >= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x += self.aceleracion",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_UP] and self.velocidad_maxima*-1 <= velocidad_escalada_y and self.salto:",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y -= self.aceleracion*20",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_DOWN] and self.velocidad_maxima >= velocidad_escalada_y and self.cavar:",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.aceleracion*20",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[0] += velocidad_escalada_x",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[1] += velocidad_escalada_y",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def frenar(self, teclas):",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_LEFT] and not teclas[pygame.K_RIGHT] and self.velocidad_x != 0:",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno/10",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10                ",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno/10",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x -= int(self.freno/10)",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x += int(self.freno/10)",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_UP] and not teclas[pygame.K_DOWN] and self.velocidad_y != 0:",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/1.5)",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno)",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/4)",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno/4)",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, ROJO, (int(self.pos[0]), int(self.pos[1]), self.tamaño, self.tamaño))",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar cada pantalla",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Pantalla:",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, ancho, alto, titulo=\"Pantalla\"):",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = ancho",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = alto",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.set_caption(titulo)",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Obtener el tamaño de la pantalla",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        info_pantalla = pygame.display.Info()",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        print(\"antes\",info_pantalla)",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho_total = info_pantalla.current_w",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto_total = info_pantalla.current_h",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_Y = int(self.alto_total/2)",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_X = int(self.ancho_total/2)",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Superficie de visualización en modo pantalla completa",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface = self.seleccionar_pantalla(0)",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        print(\"despues\",info_pantalla)",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def seleccionar_pantalla(self, pantalla_index):",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        id_pantalla = pygame.display.get_num_displays()",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if pantalla_index < 0 or pantalla_index >= id_pantalla:",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            raise ValueError(\"Índice de pantalla fuera de rango\")",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN, display=pantalla_index)",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_datos_pantalla(self, *args):",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        datos = {",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho\": self.ancho,",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto\": self.alto,",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho_total\": self.ancho_total,",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto_total\": self.alto_total,",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_X\": self.mitad_X,",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_Y\": self.mitad_Y",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return [datos[arg] for arg in args if arg in datos]",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_juego(self, **kwargs):",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.fill(NEGRO)",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        personaje = kwargs.get('personaje', False)",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if personaje:",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            personaje.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plataforma = kwargs.get('plataforma', False)",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if plataforma:",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            plataforma.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Dibujar una línea azul desde (100, 100) hasta (700, 500) con un grosor de 5 píxeles",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.line(self.display_surface, AZUL, (0, self.mitad_Y), (self.ancho_total, self.mitad_Y), 5)",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_menu(self):",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Crear una superficie con transparencia",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay = pygame.Surface((self.ancho_total, self.alto_total), pygame.SRCALPHA)",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay.fill((190, 190, 190, 1))  # Rellenar con negro y 50% de transparencia (128 en el canal alfa)",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.blit(overlay, (0, 0))",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar Plataformas",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Plataforma:",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, **kwargs):",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.tipo = kwargs.get('tipo', 'default')",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = kwargs.get('alto', 0)",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = kwargs.get('ancho', 0)",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_X = kwargs.get('posicion_X', 0)",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_Y = kwargs.get('posicion_Y', 0)",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, BLANCO, (self.posicion_X, self.posicion_Y, self.ancho, self.alto))",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def juego(pantalla=Pantalla, jugador=Personaje):",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    clock = pygame.time.Clock()",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    mitad_Y = pantalla.get_datos_pantalla(\"mitad_Y\")[0]",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    plataforma = Plataforma(tipo='suelo', alto=10, ancho=100, posicion_X=200, posicion_Y=mitad_Y-100)",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        delta_time = clock.tick(60) / 1000.0  # Delta time en segundos",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        jugador.mover(teclas, delta_time, mitad_Y)",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_juego(personaje=jugador, plataforma=plataforma)",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def menu(pantalla):",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_menu()",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elif teclas[pygame.K_BACKSPACE]:",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return True",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def main():",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Inicializar Pygame",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.init()",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Obtener el número de pantallas",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    num_pantallas = pygame.display.get_num_displays()",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Número de pantallas disponibles: {num_pantallas}\")",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Configuración inicial",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    jugador = Personaje(400, 300)",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Variables de control",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    bucle_principal = True",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Bucle principal",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while bucle_principal:",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        is_end = juego(pantalla_principal, jugador)",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end==False:",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            is_end = menu(pantalla_principal)",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end==True:",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            bucle_principal=False",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.quit()",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1073741825,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nif __name__ == \"__main__\":",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1073741825,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    main()",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1073741825,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1073741825,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1073741825,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 1925,
          "totalElapsed": 12718
        },
        "metadata": {
          "applyEditsId": "de6e2337-bf7b-4b3a-838b-d6fcc30c0662",
          "modelMessageId": "bbfdce05-0636-40ef-821a-1cfcc1f9b69a",
          "responseId": "9b6c4c07-63ea-4702-904d-fd768b62050d",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 94
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 95
            },
            "text": "los codigos de muestra lo pones en pruebas, como hago para ver los datos de mi pantalla vieja,",
            "kind": "text"
          }
        ],
        "text": "los codigos de muestra lo pones en pruebas, como hago para ver los datos de mi pantalla vieja,"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Para ver los datos de tu pantalla vieja, puedes usar `pygame.display.get_desktop_display_mode()` para obtener el modo de pantalla de cada pantalla disponible. Aquí tienes el código actualizado para `pruebas.py`:\n\n### [pruebas.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/pruebas.py)\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\n\npygame.init()\ndisplays = pygame.display.get_num_displays()\nprint(f\"Número de pantallas: {displays}\")\n\nfor i in range(displays):\n    display_mode = pygame.display.get_desktop_display_mode(i)\n    print(f\"Pantalla {i}: {display_mode.w}x{display_mode.h}\")\n\npygame.quit()\n```\n\nEste código te permitirá ver la resolución de cada pantalla conectada a tu sistema. Si tu pantalla vieja está conectada y reconocida por el sistema operativo, debería aparecer en la lista con su resolución.\n\n### [Main.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/Main.py)\n\nAsegúrate de que el código para seleccionar la pantalla también esté correcto:\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.init()",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "displays = pygame.display.get_num_displays()",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "print(f\"Número de pantallas: {displays}\")",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nfor i in range(displays):",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1073741825,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    display_mode = pygame.display.get_desktop_display_mode(i)",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1073741825,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    print(f\"Pantalla {i}: {display_mode.w}x{display_mode.h}\")",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1073741825,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1073741825,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\npygame.quit()",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1073741825,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\n\n# ...existing code...\n\nclass Pantalla:\n    # ...existing code...\n\n    def seleccionar_pantalla(self, pantalla_index):\n        id_pantalla = pygame.display.get_num_displays()\n        if pantalla_index < 0 or pantalla_index >= id_pantalla:\n            raise ValueError(\"Índice de pantalla fuera de rango\")\n        return pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN, display=pantalla_index)\n\n    # ...existing code...\n\ndef main():\n    # Inicializar Pygame\n    pygame.init()\n    \n    # Obtener el número de pantallas\n    num_pantallas = pygame.display.get_num_displays()\n    print(f\"Número de pantallas disponibles: {num_pantallas}\")\n    \n    # Configuración inicial\n    jugador = Personaje(400, 300)\n    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")\n    \n    # Variables de control\n    bucle_principal = True\n\n    # Bucle principal\n    while bucle_principal:\n        is_end = juego(pantalla_principal, jugador)\n        if is_end == False:\n            is_end = menu(pantalla_principal)\n\n        if is_end == True:\n            bucle_principal = False\n\n    pygame.quit()\n\nif __name__ == \"__main__\":\n    main()\n```\n\nCon estos cambios, deberías poder ver la información de todas las pantallas conectadas, incluyendo la pantalla vieja.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Constantes de colores",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ROJO = (255, 0, 0)",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "NEGRO = (0, 0, 0)",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "BLANCO = (255, 255, 255)",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "AZUL = (0, 0, 255)  # Añadir constante de color para la línea",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar el personaje",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Personaje:",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    tamaño = 30  # Tamaño del cuadrado",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_maxima = 5",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    salto = False",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    cavar = False",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    gravedad = 13",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    freno = 10",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    aceleracion = 20",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_x = 0",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_y = 0",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, x, y):",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos = [x, y]",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def set_gravedad(self, valor):",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.gravedad = valor",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_gravedad(self):",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return self.gravedad",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def accion_gravedad(self, piso):",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not(self.pos[1] >= piso-self.tamaño):",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.salto = False",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.gravedad",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if not self.salto:",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.salto = True",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.cavar = True",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y = 0",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.pos[1] = piso-self.tamaño",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            else:",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] >= piso:",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_y -= 20+(self.pos[1]-piso)*2",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] > piso:",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.cavar = False",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def mover(self, teclas, delta_time, mitad_Y):",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.accion_gravedad(mitad_Y)",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.frenar(teclas)",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_x = int(self.velocidad_x * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_y = int(self.velocidad_y * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_LEFT] and self.velocidad_maxima*-1 <= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x -= self.aceleracion",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_RIGHT] and self.velocidad_maxima >= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x += self.aceleracion",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_UP] and self.velocidad_maxima*-1 <= velocidad_escalada_y and self.salto:",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y -= self.aceleracion*20",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_DOWN] and self.velocidad_maxima >= velocidad_escalada_y and self.cavar:",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.aceleracion*20",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[0] += velocidad_escalada_x",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[1] += velocidad_escalada_y",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def frenar(self, teclas):",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_LEFT] and not teclas[pygame.K_RIGHT] and self.velocidad_x != 0:",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno/10",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10                ",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno/10",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x -= int(self.freno/10)",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x += int(self.freno/10)",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_UP] and not teclas[pygame.K_DOWN] and self.velocidad_y != 0:",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/1.5)",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno)",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/4)",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno/4)",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, ROJO, (int(self.pos[0]), int(self.pos[1]), self.tamaño, self.tamaño))",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar cada pantalla",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Pantalla:",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, ancho, alto, titulo=\"Pantalla\"):",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = ancho",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = alto",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.set_caption(titulo)",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Obtener el tamaño de la pantalla",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        info_pantalla = pygame.display.Info()",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho_total = info_pantalla.current_w",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto_total = info_pantalla.current_h",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_Y = int(self.alto_total/2)",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_X = int(self.ancho_total/2)",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Superficie de visualización en modo pantalla completa",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface = self.seleccionar_pantalla(1)",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def seleccionar_pantalla(self, pantalla_index):",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        id_pantalla = pygame.display.get_num_displays()",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if pantalla_index < 0 or pantalla_index >= id_pantalla:",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            raise ValueError(\"Índice de pantalla fuera de rango\")",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN, display=pantalla_index)",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_datos_pantalla(self, *args):",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        datos = {",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho\": self.ancho,",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto\": self.alto,",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho_total\": self.ancho_total,",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto_total\": self.alto_total,",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_X\": self.mitad_X,",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_Y\": self.mitad_Y",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return [datos[arg] for arg in args if arg in datos]",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_juego(self, **kwargs):",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.fill(NEGRO)",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        personaje = kwargs.get('personaje', False)",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if personaje:",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            personaje.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plataforma = kwargs.get('plataforma', False)",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if plataforma:",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            plataforma.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Dibujar una línea azul desde (100, 100) hasta (700, 500) con un grosor de 5 píxeles",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.line(self.display_surface, AZUL, (0, self.mitad_Y), (self.ancho_total, self.mitad_Y), 5)",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_menu(self):",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Crear una superficie con transparencia",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay = pygame.Surface((self.ancho_total, self.alto_total), pygame.SRCALPHA)",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay.fill((190, 190, 190, 1))  # Rellenar con negro y 50% de transparencia (128 en el canal alfa)",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.blit(overlay, (0, 0))",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar Plataformas",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Plataforma:",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, **kwargs):",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.tipo = kwargs.get('tipo', 'default')",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = kwargs.get('alto', 0)",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = kwargs.get('ancho', 0)",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_X = kwargs.get('posicion_X', 0)",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_Y = kwargs.get('posicion_Y', 0)",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, BLANCO, (self.posicion_X, self.posicion_Y, self.ancho, self.alto))",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def juego(pantalla=Pantalla, jugador=Personaje):",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    clock = pygame.time.Clock()",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    mitad_Y = pantalla.get_datos_pantalla(\"mitad_Y\")[0]",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    plataforma = Plataforma(tipo='suelo', alto=10, ancho=100, posicion_X=200, posicion_Y=mitad_Y-100)",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        delta_time = clock.tick(60) / 1000.0  # Delta time en segundos",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        jugador.mover(teclas, delta_time, mitad_Y)",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_juego(personaje=jugador, plataforma=plataforma)",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def menu(pantalla):",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_menu()",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elif teclas[pygame.K_BACKSPACE]:",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return True",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def main():",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Inicializar Pygame",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.init()",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Obtener el número de pantallas",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    num_pantallas = pygame.display.get_num_displays()",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Número de pantallas disponibles: {num_pantallas}\")",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Configuración inicial",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    jugador = Personaje(400, 300)",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Variables de control",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    bucle_principal = True",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Bucle principal",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while bucle_principal:",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        is_end = juego(pantalla_principal, jugador)",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end == False:",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            is_end = menu(pantalla_principal)",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end == True:",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            bucle_principal = False",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.quit()",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "if __name__ == \"__main__\":",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    main()",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1073741825,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1073741825,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1073741825,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 2112,
          "totalElapsed": 13310
        },
        "metadata": {
          "applyEditsId": "ba4697a8-d536-485c-b876-9e173d8cbaae",
          "modelMessageId": "9a987011-3b8d-40b7-80ee-1bdd40b1b085",
          "responseId": "a0f1d2b3-eacc-4b06-95a4-26e3e96eac03",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 32
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 33
            },
            "text": "el codigo en pruebas no funciona",
            "kind": "text"
          }
        ],
        "text": "el codigo en pruebas no funciona"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Para obtener información sobre todas las pantallas conectadas, puedes usar `pygame.display.get_num_displays()` y `pygame.display.get_desktop_display_mode()`. Aquí tienes el código actualizado para `pruebas.py`:\n\n### [pruebas.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/pruebas.py)\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\n\npygame.init()\ndisplays = pygame.display.get_num_displays()\nprint(f\"Número de pantallas: {displays}\")\n\nfor i in range(displays):\n    display_mode = pygame.display.get_desktop_display_mode(i)\n    print(f\"Pantalla {i}: {display_mode.w}x{display_mode.h}\")\n\npygame.quit()\n```\n\nEste código debería funcionar correctamente para obtener la resolución de cada pantalla conectada a tu sistema. Si sigue sin funcionar, asegúrate de que tu versión de Pygame es compatible con estas funciones y que tu sistema operativo reconoce correctamente todas las pantallas conectadas.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.init()",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "displays = pygame.display.get_num_displays()",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "print(f\"Número de pantallas: {displays}\")",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "for i in range(displays):",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    display_mode = pygame.display.get_desktop_display_mode(i)",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Pantalla {i}: {display_mode.w}x{display_mode.h}\")",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.quit()",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 4239,
          "totalElapsed": 9163
        },
        "metadata": {
          "applyEditsId": "cec57072-271d-4644-9f4d-742eedff4cb1",
          "modelMessageId": "6b80b754-367e-4757-b62a-27cf8280b681",
          "responseId": "5f0d749f-6e50-44b7-8de4-6f0bc092a51c",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 407
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 7,
              "endColumn": 76
            },
            "text": "esto es lo que retorna:\r\nNúmero de pantallas: 2\r\nTraceback (most recent call last):\r\n  File \"d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py\", line 8, in <module>\r\n    display_mode = pygame.display.get_display_mode(i)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: module 'pygame.display' has no attribute 'get_display_mode'",
            "kind": "text"
          }
        ],
        "text": "esto es lo que retorna:\r\nNúmero de pantallas: 2\r\nTraceback (most recent call last):\r\n  File \"d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py\", line 8, in <module>\r\n    display_mode = pygame.display.get_display_mode(i)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: module 'pygame.display' has no attribute 'get_display_mode'"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Parece que `pygame.display.get_display_mode()` no es una función válida en Pygame. En su lugar, puedes usar `pygame.display.Info()` para obtener información sobre la pantalla actual. Sin embargo, esto solo te dará información sobre la pantalla principal.\n\nPara obtener información sobre todas las pantallas conectadas, puedes usar la biblioteca `screeninfo`. Aquí tienes cómo hacerlo:\n\n### [pruebas.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/pruebas.py)\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "from screeninfo import get_monitors\n\nmonitors = get_monitors()\nprint(f\"Número de pantallas: {len(monitors)}\")\n\nfor i, monitor in enumerate(monitors):\n    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")\n```\n\nPara instalar la biblioteca `screeninfo`, puedes usar pip:\n```sh\npip install screeninfo\n```\n\nEste código te permitirá obtener información sobre todas las pantallas conectadas, incluyendo su resolución y nombre.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "from screeninfo import get_monitors",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "monitors = get_monitors()",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "print(f\"Número de pantallas: {len(monitors)}\")",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "for i, monitor in enumerate(monitors):",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 77,
                  "endLineNumber": 12,
                  "endColumn": 1
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 2354,
          "totalElapsed": 6565
        },
        "metadata": {
          "applyEditsId": "19ac8245-dc70-4bff-a8c8-f49cc2ddcd88",
          "modelMessageId": "8646504f-9315-4d69-a9ed-95c11c2628f1",
          "responseId": "a344158a-1949-4c56-94e1-2932758f96a9",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 47
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 48
            },
            "text": "como se cual es la pantalla principal? la cero?",
            "kind": "text"
          }
        ],
        "text": "como se cual es la pantalla principal? la cero?"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Sí, generalmente la pantalla principal es la pantalla con el índice `0`. En la mayoría de los sistemas operativos, la pantalla principal es la primera pantalla detectada y tiene el índice `0`. Sin embargo, esto puede variar dependiendo de la configuración de tu sistema operativo y cómo están conectadas las pantallas.\n\nPara asegurarte de cuál es la pantalla principal, puedes imprimir la información de todas las pantallas y verificar cuál tiene las características que esperas de la pantalla principal.\n\nAquí tienes un ejemplo de cómo hacerlo usando `screeninfo`:\n\n### [pruebas.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/pruebas.py)\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "from screeninfo import get_monitors\n\nmonitors = get_monitors()\nprint(f\"Número de pantallas: {len(monitors)}\")\n\nfor i, monitor in enumerate(monitors):\n    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")\n\n# Asumir que la pantalla principal es la pantalla con el índice 0\npantalla_principal = monitors[0]\nprint(f\"Pantalla principal: {pantalla_principal.width}x{pantalla_principal.height}, {pantalla_principal.name}\")\n```\n\nEste código imprimirá la información de todas las pantallas conectadas y asumirá que la pantalla principal es la pantalla con el índice `0`. Puedes ajustar el índice si descubres que la pantalla principal tiene un índice diferente en tu configuración específica.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "from screeninfo import get_monitors",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "monitors = get_monitors()",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "print(f\"Número de pantallas: {len(monitors)}\")",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "for i, monitor in enumerate(monitors):",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1073741825,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n# Asumir que la pantalla principal es la pantalla con el índice 0",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1073741825,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\npantalla_principal = monitors[0]",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1073741825,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nprint(f\"Pantalla principal: {pantalla_principal.width}x{pantalla_principal.height}, {pantalla_principal.name}\")",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1073741825,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 2577,
          "totalElapsed": 8747
        },
        "metadata": {
          "applyEditsId": "99745f37-265a-4138-8c2e-9ea01365ee4c",
          "modelMessageId": "8a65d043-27e4-4aeb-8ea0-3a1986081255",
          "responseId": "7127db64-0a26-4b34-9e41-fcc1a341921a",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 51
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 52
            },
            "text": "repara el selecionar pantalla con la nueva libreria",
            "kind": "text"
          }
        ],
        "text": "repara el selecionar pantalla con la nueva libreria"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "### [Main.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/Main.py)\n\nActualizar la función `seleccionar_pantalla` para usar la biblioteca `screeninfo` para obtener información sobre las pantallas y seleccionar la pantalla correcta.\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\nfrom screeninfo import get_monitors\n\n# ...existing code...\n\nclass Pantalla:\n    \n    def __init__(self, ancho, alto, titulo=\"Pantalla\"):\n        self.ancho = ancho\n        self.alto = alto\n        pygame.display.set_caption(titulo)\n        \n        # Obtener el tamaño de la pantalla\n        info_pantalla = pygame.display.Info()\n\n        self.ancho_total = info_pantalla.current_w\n        self.alto_total = info_pantalla.current_h\n        self.mitad_Y = int(self.alto_total/2)\n        self.mitad_X = int(self.ancho_total/2)\n\n        # Superficie de visualización en modo pantalla completa\n        self.display_surface = self.seleccionar_pantalla(0)\n\n    def seleccionar_pantalla(self, pantalla_index):\n        monitors = get_monitors()\n        if pantalla_index < 0 or pantalla_index >= len(monitors):\n            raise ValueError(\"Índice de pantalla fuera de rango\")\n        \n        monitor = monitors[pantalla_index]\n        self.ancho_total = monitor.width\n        self.alto_total = monitor.height\n        return pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN)\n\n    # ...existing code...\n\ndef main():\n    # Inicializar Pygame\n    pygame.init()\n    \n    # Obtener el número de pantallas\n    num_pantallas = len(get_monitors())\n    print(f\"Número de pantallas disponibles: {num_pantallas}\")\n    \n    # Configuración inicial\n    jugador = Personaje(400, 300)\n    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")\n    \n    # Variables de control\n    bucle_principal = True\n\n    # Bucle principal\n    while bucle_principal:\n        is_end = juego(pantalla_principal, jugador)\n        if is_end == False:\n            is_end = menu(pantalla_principal)\n\n        if is_end == True:\n            bucle_principal = False\n\n    pygame.quit()\n\nif __name__ == \"__main__\":\n    main()\n```\n\nCon estos cambios, la función `seleccionar_pantalla` usará la biblioteca `screeninfo` para obtener información sobre las pantallas y seleccionar la pantalla correcta basada en el índice proporcionado.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "from screeninfo import get_monitors",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Constantes de colores",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ROJO = (255, 0, 0)",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "NEGRO = (0, 0, 0)",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "BLANCO = (255, 255, 255)",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "AZUL = (0, 0, 255)  # Añadir constante de color para la línea",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar el personaje",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Personaje:",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    tamaño = 30  # Tamaño del cuadrado",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_maxima = 5",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    salto = False",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    cavar = False",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    gravedad = 13",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    freno = 10",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    aceleracion = 20",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_x = 0",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_y = 0",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, x, y):",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos = [x, y]",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def set_gravedad(self, valor):",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.gravedad = valor",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_gravedad(self):",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return self.gravedad",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def accion_gravedad(self, piso):",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not(self.pos[1] >= piso-self.tamaño):",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.salto = False",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.gravedad",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if not self.salto:",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.salto = True",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.cavar = True",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y = 0",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.pos[1] = piso-self.tamaño",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            else:",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] >= piso:",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_y -= 20+(self.pos[1]-piso)*2",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] > piso:",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.cavar = False",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def mover(self, teclas, delta_time, mitad_Y):",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.accion_gravedad(mitad_Y)",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.frenar(teclas)",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_x = int(self.velocidad_x * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_y = int(self.velocidad_y * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_LEFT] and self.velocidad_maxima*-1 <= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x -= self.aceleracion",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_RIGHT] and self.velocidad_maxima >= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x += self.aceleracion",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_UP] and self.velocidad_maxima*-1 <= velocidad_escalada_y and self.salto:",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y -= self.aceleracion*20",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_DOWN] and self.velocidad_maxima >= velocidad_escalada_y and self.cavar:",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.aceleracion*20",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[0] += velocidad_escalada_x",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[1] += velocidad_escalada_y",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def frenar(self, teclas):",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_LEFT] and not teclas[pygame.K_RIGHT] and self.velocidad_x != 0:",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno/10",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10                ",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno/10",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x -= int(self.freno/10)",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x += int(self.freno/10)",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_UP] and not teclas[pygame.K_DOWN] and self.velocidad_y != 0:",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/1.5)",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno)",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/4)",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno/4)",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, ROJO, (int(self.pos[0]), int(self.pos[1]), self.tamaño, self.tamaño))",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar cada pantalla",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Pantalla:",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, ancho, alto, titulo=\"Pantalla\"):",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = ancho",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = alto",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.set_caption(titulo)",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Obtener el tamaño de la pantalla",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        info_pantalla = pygame.display.Info()",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho_total = info_pantalla.current_w",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto_total = info_pantalla.current_h",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_Y = int(self.alto_total/2)",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_X = int(self.ancho_total/2)",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Superficie de visualización en modo pantalla completa",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface = self.seleccionar_pantalla(0)",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def seleccionar_pantalla(self, pantalla_index):",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        monitors = get_monitors()",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if pantalla_index < 0 or pantalla_index >= len(monitors):",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            raise ValueError(\"Índice de pantalla fuera de rango\")",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        monitor = monitors[pantalla_index]",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho_total = monitor.width",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto_total = monitor.height",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN)",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_datos_pantalla(self, *args):",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        datos = {",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho\": self.ancho,",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto\": self.alto,",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho_total\": self.ancho_total,",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto_total\": self.alto_total,",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_X\": self.mitad_X,",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_Y\": self.mitad_Y",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return [datos[arg] for arg in args if arg in datos]",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_juego(self, **kwargs):",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.fill(NEGRO)",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        personaje = kwargs.get('personaje', False)",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if personaje:",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            personaje.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plataforma = kwargs.get('plataforma', False)",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if plataforma:",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            plataforma.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Dibujar una línea azul desde (100, 100) hasta (700, 500) con un grosor de 5 píxeles",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.line(self.display_surface, AZUL, (0, self.mitad_Y), (self.ancho_total, self.mitad_Y), 5)",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_menu(self):",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Crear una superficie con transparencia",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay = pygame.Surface((self.ancho_total, self.alto_total), pygame.SRCALPHA)",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay.fill((190, 190, 190, 1))  # Rellenar con negro y 50% de transparencia (128 en el canal alfa)",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.blit(overlay, (0, 0))",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar Plataformas",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Plataforma:",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, **kwargs):",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.tipo = kwargs.get('tipo', 'default')",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = kwargs.get('alto', 0)",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = kwargs.get('ancho', 0)",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_X = kwargs.get('posicion_X', 0)",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_Y = kwargs.get('posicion_Y', 0)",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.rect(pantalla, BLANCO, (self.posicion_X, self.posicion_Y, self.ancho, self.alto))",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def juego(pantalla=Pantalla, jugador=Personaje):",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    clock = pygame.time.Clock()",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    mitad_Y = pantalla.get_datos_pantalla(\"mitad_Y\")[0]",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    plataforma = Plataforma(tipo='suelo', alto=10, ancho=100, posicion_X=200, posicion_Y=mitad_Y-100)",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        delta_time = clock.tick(60) / 1000.0  # Delta time en segundos",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        jugador.mover(teclas, delta_time, mitad_Y)",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_juego(personaje=jugador, plataforma=plataforma)",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def menu(pantalla):",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_menu()",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elif teclas[pygame.K_BACKSPACE]:",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return True",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def main():",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Inicializar Pygame",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.init()",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Obtener el número de pantallas",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    num_pantallas = len(get_monitors())",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Número de pantallas disponibles: {num_pantallas}\")",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Configuración inicial",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    jugador = Personaje(400, 300)",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Variables de control",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    bucle_principal = True",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Bucle principal",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while bucle_principal:",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        is_end = juego(pantalla_principal, jugador)",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end==False:",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            is_end = menu(pantalla_principal)",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end==True:",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            bucle_principal=False",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1073741825,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    ",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1073741825,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    pygame.quit()",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1073741825,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1073741825,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nif __name__ == \"__main__\":",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1073741825,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    main()",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1073741825,
                  "endLineNumber": 241,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1073741825,
                  "endLineNumber": 242,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1073741825,
                  "endLineNumber": 243,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 3134,
          "totalElapsed": 39150
        },
        "metadata": {
          "applyEditsId": "204b237b-1751-4ec6-be79-f89d4c15e884",
          "modelMessageId": "abe160af-4a36-441f-a021-9a006e3cbd7e",
          "responseId": "7b64828e-27bf-4241-8f18-ea7d825016f6",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 86
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 87
            },
            "text": "puedo darle texturas a los rectangulos y formas de pygame o hay que dibujar por encima",
            "kind": "text"
          }
        ],
        "text": "puedo darle texturas a los rectangulos y formas de pygame o hay que dibujar por encima"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "En Pygame, no puedes aplicar texturas directamente a los rectángulos y formas como lo harías en un motor de juegos 3D. Sin embargo, puedes lograr un efecto similar dibujando imágenes (texturas) sobre las formas. Para esto, puedes cargar una imagen y luego dibujarla en la superficie en lugar de dibujar un rectángulo sólido.\n\nAquí tienes un ejemplo de cómo hacerlo:\n\n### [Main.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/Main.py)\n\nAñadir una textura a los rectángulos del personaje y la plataforma.\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\nfrom screeninfo import get_monitors\n\n# Constantes de colores\nROJO = (255, 0, 0)\nNEGRO = (0, 0, 0)\nBLANCO = (255, 255, 255)\nAZUL = (0, 0, 255)\n\n# Clase para manejar el personaje\nclass Personaje:\n    tamaño = 30  # Tamaño del cuadrado\n    velocidad_maxima = 5\n    salto = False\n    cavar = False\n    gravedad = 13\n    freno = 10\n    aceleracion = 20\n    velocidad_x = 0\n    velocidad_y = 0\n\n    def __init__(self, x, y, textura_path):\n        self.pos = [x, y]\n        self.textura = pygame.image.load(textura_path)\n        self.textura = pygame.transform.scale(self.textura, (self.tamaño, self.tamaño))\n\n    def set_gravedad(self, valor):\n        self.gravedad = valor\n\n    def get_gravedad(self):\n        return self.gravedad\n\n    def accion_gravedad(self, piso):\n        if not(self.pos[1] >= piso-self.tamaño):\n            self.salto = False\n            self.velocidad_y += self.gravedad\n        else:\n            if not self.salto:\n                self.salto = True\n                self.cavar = True\n                self.velocidad_y = 0\n                self.pos[1] = piso-self.tamaño\n            else:\n                if self.pos[1] >= piso:\n                    self.velocidad_y -= 20+(self.pos[1]-piso)*2\n                if self.pos[1] > piso:\n                    self.cavar = False\n\n    def mover(self, teclas, delta_time, mitad_Y):\n        self.accion_gravedad(mitad_Y)\n        self.frenar(teclas)\n\n        velocidad_escalada_x = int(self.velocidad_x * delta_time * 10)/10\n        velocidad_escalada_y = int(self.velocidad_y * delta_time * 10)/10\n\n        if teclas[pygame.K_LEFT] and self.velocidad_maxima*-1 <= velocidad_escalada_x:\n            self.velocidad_x -= self.aceleracion\n        if teclas[pygame.K_RIGHT] and self.velocidad_maxima >= velocidad_escalada_x:\n            self.velocidad_x += self.aceleracion\n        if teclas[pygame.K_UP] and self.velocidad_maxima*-1 <= velocidad_escalada_y and self.salto:\n            self.velocidad_y -= self.aceleracion*20\n        if teclas[pygame.K_DOWN] and self.velocidad_maxima >= velocidad_escalada_y and self.cavar:\n            self.velocidad_y += self.aceleracion*20\n\n        self.pos[0] += velocidad_escalada_x\n        self.pos[1] += velocidad_escalada_y\n\n    def frenar(self, teclas):\n        if not teclas[pygame.K_LEFT] and not teclas[pygame.K_RIGHT] and self.velocidad_x != 0:\n            if self.velocidad_x > 0:\n                if not self.salto:\n                    self.velocidad_x -= self.freno/10\n                else:\n                    self.velocidad_x = int(self.velocidad_x/10)*10                \n                    self.velocidad_x -= self.freno\n            elif self.velocidad_x < 0:\n                if not self.salto:\n                    self.velocidad_x += self.freno/10\n                else:\n                    self.velocidad_x = int(self.velocidad_x/10)*10\n                    self.velocidad_x += self.freno\n        else:\n            if self.velocidad_x > 0:\n                self.velocidad_x -= int(self.freno/10)\n            elif self.velocidad_x < 0:\n                self.velocidad_x += int(self.freno/10)\n        \n        if not teclas[pygame.K_UP] and not teclas[pygame.K_DOWN] and self.velocidad_y != 0:\n            if self.velocidad_y > 0:\n                self.velocidad_y -= int(self.freno/1.5)\n            elif self.velocidad_y < 0:\n                self.velocidad_y += int(self.freno)\n        else:\n            if self.velocidad_y > 0:\n                self.velocidad_y -= int(self.freno/4)\n            elif self.velocidad_y < 0:\n                self.velocidad_y += int(self.freno/4)\n        \n    def dibujar(self, pantalla):\n        pantalla.blit(self.textura, (int(self.pos[0]), int(self.pos[1])))\n\n# Clase para manejar cada pantalla\nclass Pantalla:\n    ancho_total = 0\n    alto_total = 0\n    mitad_Y = 0\n    mitad_X = 0\n\n    def __init__(self, ancho, alto, titulo=\"Pantalla\"):\n        self.ancho = ancho\n        self.alto = alto\n        pygame.display.set_caption(titulo)\n\n        # Superficie de visualización en modo pantalla completa\n        self.display_surface = self.seleccionar_pantalla(1)\n\n    def seleccionar_pantalla(self, pantalla_index):\n        info_pantallas = get_monitors()\n        if pantalla_index < 0:\n            raise ValueError(\"Índice de pantalla fuera de rango\")\n        elif pantalla_index >= len(info_pantallas):\n            pantalla_index = 0\n        self.ancho_total = info_pantallas[pantalla_index].width\n        self.alto_total = info_pantallas[pantalla_index].height\n        self.mitad_Y = int(self.alto_total/2)\n        self.mitad_X = int(self.ancho_total/2)\n                             \n        return pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN, display=pantalla_index)\n\n    def get_datos_pantalla(self, *args):\n        datos = {\n            \"ancho\": self.ancho,\n            \"alto\": self.alto,\n            \"ancho_total\": self.ancho_total,\n            \"alto_total\": self.alto_total,\n            \"mitad_X\": self.mitad_X,\n            \"mitad_Y\": self.mitad_Y\n        }\n        return [datos[arg] for arg in args if arg in datos]\n\n    def actualizar_juego(self, **kwargs):\n        self.display_surface.fill(NEGRO)\n        personaje = kwargs.get('personaje', False)\n        if personaje:\n            personaje.dibujar(self.display_surface)\n        \n        plataforma = kwargs.get('plataforma', False)\n        if plataforma:\n            plataforma.dibujar(self.display_surface)\n        # Dibujar una línea azul desde (100, 100) hasta (700, 500) con un grosor de 5 píxeles\n        pygame.draw.line(self.display_surface, AZUL, (0, self.mitad_Y), (self.ancho_total, self.mitad_Y), 5)\n        pygame.display.flip()\n\n    def actualizar_menu(self):\n        # Crear una superficie con transparencia\n        overlay = pygame.Surface((self.ancho_total, self.alto_total), pygame.SRCALPHA)\n        overlay.fill((190, 190, 190, 1))  # Rellenar con negro y 50% de transparencia (128 en el canal alfa)\n        self.display_surface.blit(overlay, (0, 0))\n\n        pygame.display.flip()\n\n# Clase para manejar Plataformas\nclass Plataforma:\n    def __init__(self, **kwargs):\n        self.tipo = kwargs.get('tipo', 'default')\n        self.alto = kwargs.get('alto', 0)\n        self.ancho = kwargs.get('ancho', 0)\n        self.posicion_X = kwargs.get('posicion_X', 0)\n        self.posicion_Y = kwargs.get('posicion_Y', 0)\n        self.textura = pygame.image.load(kwargs.get('textura_path', ''))\n        self.textura = pygame.transform.scale(self.textura, (self.ancho, self.alto))\n\n    def dibujar(self, pantalla):\n        pantalla.blit(self.textura, (self.posicion_X, self.posicion_Y))\n\ndef juego(pantalla=Pantalla, jugador=Personaje):\n    clock = pygame.time.Clock()\n    mitad_Y = pantalla.get_datos_pantalla(\"mitad_Y\")[0]\n    plataforma = Plataforma(tipo='suelo', alto=10, ancho=100, posicion_X=200, posicion_Y=mitad_Y-100, textura_path='ruta/a/tu/textura.png')\n    \n    while True:\n        for evento in pygame.event.get():\n            if evento.type == pygame.QUIT:\n                return True \n        delta_time = clock.tick(60) / 1000.0  # Delta time en segundos\n        \n        teclas = pygame.key.get_pressed()\n\n        if teclas[pygame.K_ESCAPE]:\n            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida\n            return False\n\n        jugador.mover(teclas, delta_time, mitad_Y)\n        pantalla.actualizar_juego(personaje=jugador, plataforma=plataforma)\n\ndef menu(pantalla):\n    while True:\n        for evento in pygame.event.get():\n            if evento.type == pygame.QUIT:\n                return True \n        teclas = pygame.key.get_pressed()\n\n        pantalla.actualizar_menu()\n\n        if teclas[pygame.K_ESCAPE]:\n            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida\n            return False\n        elif teclas[pygame.K_BACKSPACE]:\n            return True\n\ndef main():\n    # Inicializar Pygame\n    pygame.init()\n    \n    # Configuración inicial\n    jugador = Personaje(400, 300, 'ruta/a/tu/textura.png')\n    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")\n    \n    # Variables de control\n    bucle_principal = True\n\n    # Bucle principal\n    while bucle_principal:\n        is_end = juego(pantalla_principal, jugador)\n        if is_end==False:\n            is_end = menu(pantalla_principal)\n\n        if is_end==True:\n            bucle_principal=False\n\n    pygame.quit()\n\nif __name__ == \"__main__\":\n    main()\n```\n\nEn este ejemplo, se cargan texturas desde archivos de imagen y se aplican a los rectángulos del personaje y la plataforma. Asegúrate de reemplazar `'ruta/a/tu/textura.png'` con la ruta correcta a tus archivos de textura.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "from screeninfo import get_monitors",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Constantes de colores",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ROJO = (255, 0, 0)",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "NEGRO = (0, 0, 0)",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "BLANCO = (255, 255, 255)",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "AZUL = (0, 0, 255)",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar el personaje",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Personaje:",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    tamaño = 30  # Tamaño del cuadrado",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_maxima = 5",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    salto = False",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    cavar = False",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    gravedad = 13",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    freno = 10",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    aceleracion = 20",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_x = 0",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    velocidad_y = 0",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, x, y, textura_path):",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos = [x, y]",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.textura = pygame.image.load(textura_path)",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.textura = pygame.transform.scale(self.textura, (self.tamaño, self.tamaño))",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def set_gravedad(self, valor):",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.gravedad = valor",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_gravedad(self):",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return self.gravedad",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def accion_gravedad(self, piso):",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not(self.pos[1] >= piso-self.tamaño):",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.salto = False",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.gravedad",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if not self.salto:",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.salto = True",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.cavar = True",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y = 0",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.pos[1] = piso-self.tamaño",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            else:",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] >= piso:",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_y -= 20+(self.pos[1]-piso)*2",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if self.pos[1] > piso:",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.cavar = False",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def mover(self, teclas, delta_time, mitad_Y):",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.accion_gravedad(mitad_Y)",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.frenar(teclas)",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_x = int(self.velocidad_x * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        velocidad_escalada_y = int(self.velocidad_y * delta_time * 10)/10",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_LEFT] and self.velocidad_maxima*-1 <= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x -= self.aceleracion",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_RIGHT] and self.velocidad_maxima >= velocidad_escalada_x:",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_x += self.aceleracion",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_UP] and self.velocidad_maxima*-1 <= velocidad_escalada_y and self.salto:",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y -= self.aceleracion*20",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_DOWN] and self.velocidad_maxima >= velocidad_escalada_y and self.cavar:",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            self.velocidad_y += self.aceleracion*20",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[0] += velocidad_escalada_x",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.pos[1] += velocidad_escalada_y",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def frenar(self, teclas):",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_LEFT] and not teclas[pygame.K_RIGHT] and self.velocidad_x != 0:",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno/10",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10                ",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x -= self.freno",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                if not self.salto:",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno/10",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                else:",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x = int(self.velocidad_x/10)*10",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                    self.velocidad_x += self.freno",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_x > 0:",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x -= int(self.freno/10)",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_x < 0:",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_x += int(self.freno/10)",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if not teclas[pygame.K_UP] and not teclas[pygame.K_DOWN] and self.velocidad_y != 0:",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/1.5)",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno)",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        else:",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if self.velocidad_y > 0:",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y -= int(self.freno/4)",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            elif self.velocidad_y < 0:",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                self.velocidad_y += int(self.freno/4)",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.blit(self.textura, (int(self.pos[0]), int(self.pos[1])))",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar cada pantalla",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Pantalla:",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ancho_total = 0",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    alto_total = 0",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    mitad_Y = 0",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    mitad_X = 0",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, ancho, alto, titulo=\"Pantalla\"):",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = ancho",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = alto",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.set_caption(titulo)",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Superficie de visualización en modo pantalla completa",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface = self.seleccionar_pantalla(1)",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def seleccionar_pantalla(self, pantalla_index):",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        info_pantallas = get_monitors()",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if pantalla_index < 0:",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            raise ValueError(\"Índice de pantalla fuera de rango\")",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elif pantalla_index >= len(info_pantallas):",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pantalla_index = 0",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho_total = info_pantallas[pantalla_index].width",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto_total = info_pantallas[pantalla_index].height",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_Y = int(self.alto_total/2)",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.mitad_X = int(self.ancho_total/2)",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                             ",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return pygame.display.set_mode((self.ancho_total, self.alto_total), pygame.FULLSCREEN, display=pantalla_index)",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def get_datos_pantalla(self, *args):",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        datos = {",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho\": self.ancho,",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto\": self.alto,",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"ancho_total\": self.ancho_total,",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"alto_total\": self.alto_total,",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_X\": self.mitad_X,",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            \"mitad_Y\": self.mitad_Y",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return [datos[arg] for arg in args if arg in datos]",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_juego(self, **kwargs):",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.fill(NEGRO)",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        personaje = kwargs.get('personaje', False)",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if personaje:",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            personaje.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plataforma = kwargs.get('plataforma', False)",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if plataforma:",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            plataforma.dibujar(self.display_surface)",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Dibujar una línea azul desde (100, 100) hasta (700, 500) con un grosor de 5 píxeles",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.draw.line(self.display_surface, AZUL, (0, self.mitad_Y), (self.ancho_total, self.mitad_Y), 5)",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def actualizar_menu(self):",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        # Crear una superficie con transparencia",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay = pygame.Surface((self.ancho_total, self.alto_total), pygame.SRCALPHA)",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        overlay.fill((190, 190, 190, 1))  # Rellenar con negro y 50% de transparencia (128 en el canal alfa)",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.display_surface.blit(overlay, (0, 0))",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pygame.display.flip()",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Clase para manejar Plataformas",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "class Plataforma:",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def __init__(self, **kwargs):",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.tipo = kwargs.get('tipo', 'default')",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.alto = kwargs.get('alto', 0)",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.ancho = kwargs.get('ancho', 0)",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_X = kwargs.get('posicion_X', 0)",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.posicion_Y = kwargs.get('posicion_Y', 0)",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.textura = pygame.image.load(kwargs.get('textura_path', ''))",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        self.textura = pygame.transform.scale(self.textura, (self.ancho, self.alto))",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    def dibujar(self, pantalla):",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.blit(self.textura, (self.posicion_X, self.posicion_Y))",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def juego(pantalla=Pantalla, jugador=Personaje):",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    clock = pygame.time.Clock()",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    mitad_Y = pantalla.get_datos_pantalla(\"mitad_Y\")[0]",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    plataforma = Plataforma(tipo='suelo', alto=10, ancho=100, posicion_X=200, posicion_Y=mitad_Y-100, textura_path='ruta/a/tu/textura.png')",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        delta_time = clock.tick(60) / 1000.0  # Delta time en segundos",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        jugador.mover(teclas, delta_time, mitad_Y)",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_juego(personaje=jugador, plataforma=plataforma)",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def menu(pantalla):",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while True:",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "                return True ",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        teclas = pygame.key.get_pressed()",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        pantalla.actualizar_menu()",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if teclas[pygame.K_ESCAPE]:",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            pygame.time.wait(200)  # Esperar 200 milisegundos para evitar alternancia rápida",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return False",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elif teclas[pygame.K_BACKSPACE]:",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            return True",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "def main():",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Inicializar Pygame",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.init()",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Configuración inicial",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    jugador = Personaje(400, 300, 'ruta/a/tu/textura.png')",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla_principal = Pantalla(800, 600, \"Pantalla Principal\")",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Variables de control",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    bucle_principal = True",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Bucle principal",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    while bucle_principal:",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        is_end = juego(pantalla_principal, jugador)",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end==False:",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            is_end = menu(pantalla_principal)",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if is_end==True:",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            bucle_principal=False",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.quit()",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nif __name__ == \"__main__\":",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1073741825,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    main()",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1073741825,
                  "endLineNumber": 241,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1073741825,
                  "endLineNumber": 242,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1073741825,
                  "endLineNumber": 243,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 3232,
          "totalElapsed": 58602
        },
        "metadata": {
          "applyEditsId": "0eec50c9-1bc2-4633-bca8-593836b1a440",
          "modelMessageId": "2a7bfbbd-8a2c-4a42-9b16-1579f7ebda3a",
          "responseId": "6d6c1ff2-8de1-4fe8-9523-52d69b6aef0e",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 109
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 110
            },
            "text": "carga una imagen recoratada a un rectangulo con hit box en pruebas, el nombre de la imagen es \"Nivanaqua.jpg\"",
            "kind": "text"
          }
        ],
        "text": "carga una imagen recoratada a un rectangulo con hit box en pruebas, el nombre de la imagen es \"Nivanaqua.jpg\""
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "### [pruebas.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/pruebas.py)\n\nCargar una imagen recortada y dibujarla en un rectángulo con una hitbox.\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\n\n# Inicializar Pygame\npygame.init()\n\n# Configuración de la pantalla\nancho_pantalla = 800\nalto_pantalla = 600\npantalla = pygame.display.set_mode((ancho_pantalla, alto_pantalla))\npygame.display.set_caption(\"Prueba de Imagen Recortada\")\n\n# Cargar la imagen\nimagen = pygame.image.load(\"Nivanaqua.jpg\")\n\n# Definir el área de recorte (x, y, ancho, alto)\narea_recorte = pygame.Rect(50, 50, 200, 200)\nimagen_recortada = imagen.subsurface(area_recorte)\n\n# Escalar la imagen recortada al tamaño del rectángulo\nancho_rect = 100\nalto_rect = 100\nimagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))\n\n# Posición del rectángulo\npos_x = 350\npos_y = 250\n\n# Bucle principal\ncorriendo = True\nwhile corriendo:\n    for evento in pygame.event.get():\n        if evento.type == pygame.QUIT:\n            corriendo = False\n\n    # Limpiar la pantalla\n    pantalla.fill((0, 0, 0))\n\n    # Dibujar la imagen recortada\n    pantalla.blit(imagen_recortada, (pos_x, pos_y))\n\n    # Dibujar la hitbox (rectángulo)\n    hitbox = pygame.Rect(pos_x, pos_y, ancho_rect, alto_rect)\n    pygame.draw.rect(pantalla, (255, 0, 0), hitbox, 2)\n\n    # Actualizar la pantalla\n    pygame.display.flip()\n\n# Salir de Pygame\npygame.quit()\n```\n\nEste código carga la imagen \"Nivanaqua.jpg\", recorta un área específica de la imagen, escala la imagen recortada al tamaño del rectángulo y dibuja la imagen recortada en la pantalla con una hitbox visible. Asegúrate de que la imagen \"Nivanaqua.jpg\" esté en el mismo directorio que el script o proporciona la ruta completa a la imagen.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "from screeninfo import get_monitors",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Inicializar Pygame",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.init()",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Configuración de la pantalla",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nancho_pantalla = 800",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1073741825,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nalto_pantalla = 600",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1073741825,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\npantalla = pygame.display.set_mode((ancho_pantalla, alto_pantalla))",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1073741825,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\npygame.display.set_caption(\"Prueba de Imagen Recortada\")",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1073741825,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1073741825,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n# Cargar la imagen",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1073741825,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nimagen = pygame.image.load(\"Nivanaqua.jpg\")",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1073741825,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1073741825,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n# Definir el área de recorte (x, y, ancho, alto)",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1073741825,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\narea_recorte = pygame.Rect(50, 50, 200, 200)",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1073741825,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nimagen_recortada = imagen.subsurface(area_recorte)",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1073741825,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1073741825,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n# Escalar la imagen recortada al tamaño del rectángulo",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1073741825,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nancho_rect = 100",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1073741825,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nalto_rect = 100",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1073741825,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nimagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1073741825,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1073741825,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n# Posición del rectángulo",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1073741825,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\npos_x = 350",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1073741825,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\npos_y = 250",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1073741825,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1073741825,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n# Bucle principal",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1073741825,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\ncorriendo = True",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1073741825,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nwhile corriendo:",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1073741825,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1073741825,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n        if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1073741825,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n            corriendo = False",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1073741825,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1073741825,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    # Limpiar la pantalla",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1073741825,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    pantalla.fill((0, 0, 0))",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1073741825,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1073741825,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    # Dibujar la imagen recortada",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1073741825,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    pantalla.blit(imagen_recortada, (pos_x, pos_y))",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1073741825,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1073741825,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    # Dibujar la hitbox (rectángulo)",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1073741825,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    hitbox = pygame.Rect(pos_x, pos_y, ancho_rect, alto_rect)",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1073741825,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    pygame.draw.rect(pantalla, (255, 0, 0), hitbox, 2)",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1073741825,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1073741825,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    # Actualizar la pantalla",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1073741825,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    pygame.display.flip()",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1073741825,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1073741825,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n# Salir de Pygame",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1073741825,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\npygame.quit()",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1073741825,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1073741825,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nmonitors = get_monitors()",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1073741825,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nprint(f\"Número de pantallas: {len(monitors)}\")",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1073741825,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1073741825,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nfor i, monitor in enumerate(monitors):",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1073741825,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1073741825,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 3320,
          "totalElapsed": 16143
        },
        "metadata": {
          "applyEditsId": "82369c5c-e184-4fb0-9334-894b8147a99e",
          "modelMessageId": "ca039007-d9c7-4cee-8271-e0387f2022c3",
          "responseId": "75eac48d-bd8a-415c-9c81-43cb05d16fb6",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 58
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 59
            },
            "text": "cual es la diferencia entre pygame.Rect y pyagme.draw.rect",
            "kind": "text"
          }
        ],
        "text": "cual es la diferencia entre pygame.Rect y pyagme.draw.rect"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "La diferencia entre `pygame.Rect` y `pygame.draw.rect` radica en sus propósitos y usos dentro de Pygame:\n\n### `pygame.Rect`\n\n`pygame.Rect` es una clase que representa un rectángulo. Se utiliza principalmente para definir y manipular áreas rectangulares en la pantalla. Los objetos `Rect` son útiles para la detección de colisiones, la gestión de posiciones y tamaños, y otras operaciones geométricas.\n\nEjemplo de uso:\n```python\n# Crear un rectángulo en la posición (x, y) con ancho y alto especificados\nrectangulo = pygame.Rect(50, 50, 100, 100)\n\n# Mover el rectángulo\nrectangulo.x += 10\nrectangulo.y += 20\n\n# Verificar colisión con otro rectángulo\notro_rectangulo = pygame.Rect(100, 100, 50, 50)\ncolision = rectangulo.colliderect(otro_rectangulo)\n```\n\n### `pygame.draw.rect`\n\n`pygame.draw.rect` es una función que se utiliza para dibujar un rectángulo en una superficie. Esta función toma una superficie de destino, un color, y un objeto `Rect` (o una tupla que defina un rectángulo) y dibuja el rectángulo en la superficie especificada.\n\nEjemplo de uso:\n```python\n# Crear una superficie\npantalla = pygame.display.set_mode((800, 600))\n\n# Definir un color\ncolor_rojo = (255, 0, 0)\n\n# Crear un rectángulo\nrectangulo = pygame.Rect(50, 50, 100, 100)\n\n# Dibujar el rectángulo en la superficie\npygame.draw.rect(pantalla, color_rojo, rectangulo)\n```\n\n### Resumen\n\n- `pygame.Rect`: Clase para definir y manipular rectángulos. Útil para la detección de colisiones y la gestión de posiciones y tamaños.\n- `pygame.draw.rect`: Función para dibujar un rectángulo en una superficie. Requiere una superficie de destino, un color y un objeto `Rect` (o una tupla).\n\nAmbos se utilizan comúnmente juntos: `pygame.Rect` para definir la geometría y `pygame.draw.rect` para renderizar el rectángulo en la pantalla.",
          "supportThemeIcons": false,
          "supportHtml": false
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 3412,
          "totalElapsed": 9922
        },
        "metadata": {
          "applyEditsId": "cde4ca77-0105-441a-ab66-2fe760fe2eb2",
          "modelMessageId": "981d8eed-6924-46b0-bc61-8a5779a7c0ab",
          "responseId": "8e329366-763b-4caf-8eea-4c4852c8c476",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 66
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 67
            },
            "text": "en este caso estamos imprimendo la imagen? en vez de el draw.rect?",
            "kind": "text"
          }
        ],
        "text": "en este caso estamos imprimendo la imagen? en vez de el draw.rect?"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Sí, en este caso estamos utilizando `pantalla.blit(imagen_recortada, (pos_x, pos_y))` para dibujar la imagen recortada en la pantalla en lugar de usar `pygame.draw.rect`. La función `blit` se utiliza para dibujar una superficie (en este caso, la imagen recortada) sobre otra superficie (la pantalla).\n\nEl `pygame.draw.rect` se utiliza aquí solo para dibujar la hitbox alrededor de la imagen recortada, para que puedas ver el área que ocupa el rectángulo.\n\n### Resumen del código:\n\n1. **Cargar la imagen**: `imagen = pygame.image.load(\"Texturas/Nivanaqua.jpg\")`\n2. **Recortar un área de la imagen**: `imagen_recortada = imagen.subsurface(area_recorte)`\n3. **Escalar la imagen recortada**: `imagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))`\n4. **Dibujar la imagen recortada en la pantalla**: `pantalla.blit(imagen_recortada, (pos_x, pos_y))`\n5. **Dibujar la hitbox alrededor de la imagen recortada**: `pygame.draw.rect(pantalla, (255, 0, 0), hitbox, 2)`\n\n### [pruebas.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/pruebas.py)\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\nfrom screeninfo import get_monitors\n\n# Inicializar Pygame\npygame.init()\n\n# Configuración de la pantalla\nancho_pantalla = 800\nalto_pantalla = 600\npantalla = pygame.display.set_mode((ancho_pantalla, alto_pantalla))\npygame.display.set_caption(\"Prueba de Imagen Recortada\")\n\n# Cargar la imagen\nimagen = pygame.image.load(\"Texturas/Nivanaqua.jpg\")\n\n# Definir el área de recorte (x, y, ancho, alto)\narea_recorte = pygame.Rect(50, 50, 200, 200)\nimagen_recortada = imagen.subsurface(area_recorte)\n\n# Escalar la imagen recortada al tamaño del rectángulo\nancho_rect = 100\nalto_rect = 100\nimagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))\n\n# Posición del rectángulo\npos_x = 350\npos_y = 250\n\n# Bucle principal\ncorriendo = True\nwhile corriendo:\n    for evento in pygame.event.get():\n        if evento.type == pygame.QUIT:\n            corriendo = False\n\n    # Limpiar la pantalla\n    pantalla.fill((0, 0, 0))\n\n    # Dibujar la imagen recortada\n    pantalla.blit(imagen_recortada, (pos_x, pos_y))\n\n    # Dibujar la hitbox (rectángulo)\n    hitbox = pygame.Rect(pos_x, pos_y, ancho_rect, alto_rect)\n    pygame.draw.rect(pantalla, (255, 0, 0), hitbox, 2)\n\n    # Actualizar la pantalla\n    pygame.display.flip()\n\n# Salir de Pygame\npygame.quit()\n\nmonitors = get_monitors()\nprint(f\"Número de pantallas: {len(monitors)}\")\n\nfor i, monitor in enumerate(monitors):\n    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")\n```\n\nEn este código, `pantalla.blit(imagen_recortada, (pos_x, pos_y))` se utiliza para dibujar la imagen recortada en la pantalla, y `pygame.draw.rect(pantalla, (255, 0, 0), hitbox, 2)` se utiliza para dibujar un rectángulo rojo alrededor de la imagen recortada para mostrar la hitbox.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "from screeninfo import get_monitors",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Inicializar Pygame",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.init()",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Configuración de la pantalla",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ancho_pantalla = 800",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "alto_pantalla = 600",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pantalla = pygame.display.set_mode((ancho_pantalla, alto_pantalla))",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.display.set_caption(\"Prueba de Imagen Recortada\")",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Cargar la imagen",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen = pygame.image.load(\"Texturas/Nivanaqua.jpg\")",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Definir el área de recorte (x, y, ancho, alto)",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "area_recorte = pygame.Rect(50, 50, 200, 200)",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen_recortada = imagen.subsurface(area_recorte)",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Escalar la imagen recortada al tamaño del rectángulo",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ancho_rect = 100",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "alto_rect = 100",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Posición del rectángulo",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pos_x = 350",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pos_y = 250",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Bucle principal",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "corriendo = True",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "while corriendo:",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            corriendo = False",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Limpiar la pantalla",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla.fill((0, 0, 0))",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Dibujar la imagen recortada",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla.blit(imagen_recortada, (pos_x, pos_y))",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Dibujar la hitbox (rectángulo)",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    hitbox = pygame.Rect(pos_x, pos_y, ancho_rect, alto_rect)",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.draw.rect(pantalla, (255, 0, 0), hitbox, 2)",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Actualizar la pantalla",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.display.flip()",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Salir de Pygame",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.quit()",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "monitors = get_monitors()",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "print(f\"Número de pantallas: {len(monitors)}\")",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "for i, monitor in enumerate(monitors):",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 3612,
          "totalElapsed": 21993
        },
        "metadata": {
          "applyEditsId": "86a2e5f1-e30a-497b-a12a-d3ad0e07efa5",
          "modelMessageId": "84515c98-f97e-44cc-bdc7-3dbf897d88b5",
          "responseId": "212f4e25-b6c2-47a1-8d70-af6ace8e9908",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 115
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 116
            },
            "text": "la colision de .Rect sigue funcionando sin un draw.rect, ademas solo el .Rect se ve en pantalla o requiere de draw ",
            "kind": "text"
          }
        ],
        "text": "la colision de .Rect sigue funcionando sin un draw.rect, ademas solo el .Rect se ve en pantalla o requiere de draw "
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Sí, la colisión de `pygame.Rect` sigue funcionando sin necesidad de usar `pygame.draw.rect`. La clase `pygame.Rect` se utiliza para definir y manipular áreas rectangulares, y es muy útil para la detección de colisiones. No es necesario dibujar el rectángulo en la pantalla para que las colisiones funcionen.\n\n### Ejemplo de uso de `pygame.Rect` para detección de colisiones sin dibujar el rectángulo:\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\n\n# Inicializar Pygame\npygame.init()\n\n# Configuración de la pantalla\nancho_pantalla = 800\nalto_pantalla = 600\npantalla = pygame.display.set_mode((ancho_pantalla, alto_pantalla))\npygame.display.set_caption(\"Prueba de Colisiones\")\n\n# Cargar la imagen\nimagen = pygame.image.load(\"Texturas/Nivanaqua.jpg\")\n\n# Definir el área de recorte (x, y, ancho, alto)\narea_recorte = pygame.Rect(50, 50, 200, 200)\nimagen_recortada = imagen.subsurface(area_recorte)\n\n# Escalar la imagen recortada al tamaño del rectángulo\nancho_rect = 100\nalto_rect = 100\nimagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))\n\n# Posición del rectángulo\npos_x = 350\npos_y = 250\n\n# Definir la hitbox del rectángulo\nhitbox = pygame.Rect(pos_x, pos_y, ancho_rect, alto_rect)\n\n# Definir otro rectángulo para la colisión\notro_rect = pygame.Rect(300, 200, 50, 50)\n\n# Bucle principal\ncorriendo = True\nwhile corriendo:\n    for evento in pygame.event.get():\n        if evento.type == pygame.QUIT:\n            corriendo = False\n\n    # Limpiar la pantalla\n    pantalla.fill((0, 0, 0))\n\n    # Dibujar la imagen recortada\n    pantalla.blit(imagen_recortada, (pos_x, pos_y))\n\n    # Dibujar el otro rectángulo (opcional, solo para visualización)\n    pygame.draw.rect(pantalla, (0, 255, 0), otro_rect)\n\n    # Verificar colisión\n    if hitbox.colliderect(otro_rect):\n        print(\"Colisión detectada\")\n\n    # Actualizar la pantalla\n    pygame.display.flip()\n\n# Salir de Pygame\npygame.quit()\n```\n\nEn este ejemplo:\n- `hitbox` es un objeto `pygame.Rect` que define el área del rectángulo de la imagen recortada.\n- `otro_rect` es otro objeto `pygame.Rect` que se utiliza para la detección de colisiones.\n- La colisión se verifica con `hitbox.colliderect(otro_rect)`, y no es necesario dibujar `hitbox` en la pantalla para que la detección de colisiones funcione.\n\n### Resumen:\n- `pygame.Rect` se utiliza para definir y manipular áreas rectangulares y para la detección de colisiones.\n- `pygame.draw.rect` se utiliza para dibujar un rectángulo en la pantalla.\n- La detección de colisiones con `pygame.Rect` funciona sin necesidad de dibujar el rectángulo en la pantalla.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "from screeninfo import get_monitors",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Inicializar Pygame",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.init()",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Configuración de la pantalla",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ancho_pantalla = 800",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "alto_pantalla = 600",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pantalla = pygame.display.set_mode((ancho_pantalla, alto_pantalla))",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.display.set_caption(\"Prueba de Colisiones\")",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Cargar la imagen",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen = pygame.image.load(\"Texturas/Nivanaqua.jpg\")",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Definir el área de recorte (x, y, ancho, alto)",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "area_recorte = pygame.Rect(50, 50, 200, 200)",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen_recortada = imagen.subsurface(area_recorte)",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Escalar la imagen recortada al tamaño del rectángulo",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ancho_rect = 100",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "alto_rect = 100",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Posición del rectángulo",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pos_x = 350",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pos_y = 250",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Definir la hitbox del rectángulo",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "hitbox = pygame.Rect(pos_x, pos_y, ancho_rect, alto_rect)",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Definir otro rectángulo para la colisión",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "otro_rect = pygame.Rect(300, 200, 50, 50)",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Bucle principal",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "corriendo = True",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "while corriendo:",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            corriendo = False",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Limpiar la pantalla",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla.fill((0, 0, 0))",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Dibujar la imagen recortada",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla.blit(imagen_recortada, (pos_x, pos_y))",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Dibujar el otro rectángulo (opcional, solo para visualización)",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.draw.rect(pantalla, (0, 255, 0), otro_rect)",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Verificar colisión",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if hitbox.colliderect(otro_rect):",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        print(\"Colisión detectada\")",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Actualizar la pantalla",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.display.flip()",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1073741825,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n# Salir de Pygame",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1073741825,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\npygame.quit()",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1073741825,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1073741825,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nmonitors = get_monitors()",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1073741825,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nprint(f\"Número de pantallas: {len(monitors)}\")",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1073741825,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1073741825,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nfor i, monitor in enumerate(monitors):",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1073741825,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1073741825,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 3834,
          "totalElapsed": 19966
        },
        "metadata": {
          "applyEditsId": "76a3b220-fb8a-4c49-a924-d3ace54eef59",
          "modelMessageId": "86ed9af0-a9f9-460e-93cc-65e58f1cbe77",
          "responseId": "1315dd23-a121-4988-b2df-bccf3b7a5cd2",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    },
    {
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 45
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 46
            },
            "text": "lo que pregunto es si otro_rect es invisible?",
            "kind": "text"
          }
        ],
        "text": "lo que pregunto es si otro_rect es invisible?"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "name": "pruebas.py",
            "isFile": true,
            "isDynamic": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\Main.py",
              "_sep": 1,
              "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
              "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/Main.py",
              "scheme": "file"
            },
            "id": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/Main.py",
            "name": "Main.py",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "No, `otro_rect` no es invisible en el código proporcionado. En el ejemplo, `otro_rect` se dibuja en la pantalla usando `pygame.draw.rect`, lo que lo hace visible.\n\nAquí está la parte relevante del código:\n\n```python\n# Dibujar el otro rectángulo (opcional, solo para visualización)\npygame.draw.rect(pantalla, (0, 255, 0), otro_rect)\n```\n\nEsta línea de código dibuja `otro_rect` en la pantalla con un color verde `(0, 255, 0)`. Por lo tanto, `otro_rect` es visible en la pantalla.\n\nSi deseas que `otro_rect` sea invisible pero aún quieres usarlo para la detección de colisiones, simplemente elimina o comenta la línea `pygame.draw.rect(pantalla, (0, 255, 0), otro_rect)`. La detección de colisiones seguirá funcionando porque `pygame.Rect` se utiliza para definir y manipular áreas rectangulares, y no necesita ser dibujado para funcionar.\n\n### [pruebas.py](file:///d:/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computación%20Gráfica/Ultimate%20Cube%20Battle/pruebas.py)\n\n```python\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          }
        },
        {
          "value": "import pygame\nfrom screeninfo import get_monitors\n\n# Inicializar Pygame\npygame.init()\n\n# Configuración de la pantalla\nancho_pantalla = 800\nalto_pantalla = 600\npantalla = pygame.display.set_mode((ancho_pantalla, alto_pantalla))\npygame.display.set_caption(\"Prueba de Colisiones\")\n\n# Cargar la imagen\nimagen = pygame.image.load(\"Texturas/Nivanaqua.jpg\")\n\n# Definir el área de recorte (x, y, ancho, alto)\narea_recorte = pygame.Rect(50, 50, 200, 200)\nimagen_recortada = imagen.subsurface(area_recorte)\n\n# Escalar la imagen recortada al tamaño del rectángulo\nancho_rect = 100\nalto_rect = 100\nimagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))\n\n# Posición del rectángulo\npos_x = 350\npos_y = 250\n\n# Definir la hitbox del rectángulo\nhitbox = pygame.Rect(pos_x, pos_y, ancho_rect, alto_rect)\n\n# Definir otro rectángulo para la colisión\notro_rect = pygame.Rect(300, 200, 50, 50)\n\n# Bucle principal\ncorriendo = True\nwhile corriendo:\n    for evento in pygame.event.get():\n        if evento.type == pygame.QUIT:\n            corriendo = False\n\n    # Limpiar la pantalla\n    pantalla.fill((0, 0, 0))\n\n    # Dibujar la imagen recortada\n    pantalla.blit(imagen_recortada, (pos_x, pos_y))\n\n    # Dibujar el otro rectángulo (opcional, solo para visualización)\n    # pygame.draw.rect(pantalla, (0, 255, 0), otro_rect)\n\n    # Verificar colisión\n    if hitbox.colliderect(otro_rect):\n        print(\"Colisión detectada\")\n\n    # Actualizar la pantalla\n    pygame.display.flip()\n\n# Salir de Pygame\npygame.quit()\n\nmonitors = get_monitors()\nprint(f\"Número de pantallas: {len(monitors)}\")\n\nfor i, monitor in enumerate(monitors):\n    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")\n```\n\nEn este código, `otro_rect` no se dibuja en la pantalla, pero la detección de colisiones sigue funcionando.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "d:\\Escritorio\\Class the todito\\Trabajos U\\2024-2 progras\\Computación Gráfica\\Ultimate Cube Battle\\pruebas.py",
            "_sep": 1,
            "external": "file:///d%3A/Escritorio/Class%20the%20todito/Trabajos%20U/2024-2%20progras/Computaci%C3%B3n%20Gr%C3%A1fica/Ultimate%20Cube%20Battle/pruebas.py",
            "path": "/d:/Escritorio/Class the todito/Trabajos U/2024-2 progras/Computación Gráfica/Ultimate Cube Battle/pruebas.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import pygame",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "from screeninfo import get_monitors",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Inicializar Pygame",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.init()",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Configuración de la pantalla",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ancho_pantalla = 800",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "alto_pantalla = 600",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pantalla = pygame.display.set_mode((ancho_pantalla, alto_pantalla))",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.display.set_caption(\"Prueba de Colisiones\")",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Cargar la imagen",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen = pygame.image.load(\"Texturas/Nivanaqua.jpg\")",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Definir el área de recorte (x, y, ancho, alto)",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "area_recorte = pygame.Rect(50, 50, 200, 200)",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen_recortada = imagen.subsurface(area_recorte)",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Escalar la imagen recortada al tamaño del rectángulo",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "ancho_rect = 100",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "alto_rect = 100",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "imagen_recortada = pygame.transform.scale(imagen_recortada, (ancho_rect, alto_rect))",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Posición del rectángulo",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pos_x = 350",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pos_y = 250",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Definir la hitbox del rectángulo",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "hitbox = pygame.Rect(pos_x, pos_y, ancho_rect, alto_rect)",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Definir otro rectángulo para la colisión",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "otro_rect = pygame.Rect(300, 200, 50, 50)",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Bucle principal",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "corriendo = True",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "while corriendo:",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    for evento in pygame.event.get():",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if evento.type == pygame.QUIT:",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            corriendo = False",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Limpiar la pantalla",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla.fill((0, 0, 0))",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Dibujar la imagen recortada",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pantalla.blit(imagen_recortada, (pos_x, pos_y))",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Dibujar el otro rectángulo (opcional, solo para visualización)",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # pygame.draw.rect(pantalla, (0, 255, 0), otro_rect)",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Verificar colisión",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if hitbox.colliderect(otro_rect):",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        print(\"Colisión detectada\")",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    # Actualizar la pantalla",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    pygame.display.flip()",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "# Salir de Pygame",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "pygame.quit()",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "monitors = get_monitors()",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "print(f\"Número de pantallas: {len(monitors)}\")",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "for i, monitor in enumerate(monitors):",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    print(f\"Pantalla {i}: {monitor.width}x{monitor.height}, {monitor.name}\")",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ]
          ]
        }
      ],
      "result": {
        "timings": {
          "firstProgress": 4186,
          "totalElapsed": 22401
        },
        "metadata": {
          "applyEditsId": "242c2877-2a66-4035-b2c2-a05d10728526",
          "modelMessageId": "860cad51-cdba-4df7-8010-422fa7c4aaa8",
          "responseId": "51346ca8-17b7-4d9c-8619-5f2331d6375f",
          "sessionId": "8e7ce5a8-029b-4097-ac3c-c009bc6e1a2d",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "when": "config.github.copilot.chat.edits.enabled",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "contentReferences": [],
      "codeCitations": []
    }
  ]
}